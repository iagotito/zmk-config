/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define GAME 4

/ {
    macros {
        tmux_n_s: tmux_next_session {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RPAR>;
        };

        tmux_p_s: tmux_prev_session {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LPAR>;
        };
    };

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
        lhrm: left_home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOME_ROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <31 32 33 18 19 20 21 22 30 31 32 33 34 44 45 46 47 48 55 56 57 11 35 23>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        rhrm: right_home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOME_ROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <28 27 26 13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 52 53 54 0>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        lhrs: left_homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <31 32 33 18 19 20 21 22 30 31 32 33 34 44 45 46 47 48 55 56 57 11 35>;
            require-prior-idle-ms = <125>;
        };

        rhrs: right_homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 52 53 54 0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_tilde {
            bindings = <&kp TILDE>;
            key-positions = <35 34>;
            require-prior-idle-ms = <50>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -_  |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // |  CTRL |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   |  GUI  |
            //               | GUI | ALT  | SHIFT| ENTER|  LOWER |  | RAISE | SPACE| SHIFT | CTRL  | ALT  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2        &kp N3         &kp N4              &kp N5                            &kp N6     &kp N7               &kp N8         &kp N9        &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W         &kp E          &kp R               &kp T                             &kp Y      &kp U                &kp I          &kp O         &kp P     &kp BSPC
&kp TAB    &kp A   &lhrm LALT S  &lhrm LCTRL D  &lhrs LEFT_SHIFT F  &kp G                             &kp H      &rhrs RIGHT_SHIFT J  &rhrm RCTRL K  &rhrm RALT L  &kp SEMI  &kp SQT
&none      &kp Z   &kp X         &kp C          &kp V               &kp B    &kp C_MUTE    &none      &kp N      &kp M                &kp COMMA      &kp DOT       &kp FSLH  &kp RGUI
                   &none         &kp LALT       &none               &kp RET  &mo LOWER     &mo RAISE  &kp SPACE  &none                &kp RCTRL      &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8     &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI   &kp COLON  &kp BSLH  &trans
                      &trans     &trans    &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      | TPS  | TNS  |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans    &trans     &trans   &to 4
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                          &kp PG_UP  &kp HOME   &kp UP    &kp END    &kp N0   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp PG_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &tmux_p_s  &tmux_n_s  &trans    &trans     &trans   &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans     &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };

        game {
            bindings = <
&to 0   &trans  &trans  &trans  &trans  &trans                       &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp I         &kp Q           &kp W         &kp E         &kp R         &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp J         &kp A           &kp S         &kp D         &kp F         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp K         &kp Z           &kp X         &kp C         &kp V         &kp M
                &trans  &trans  &trans  &trans  &trans    &kp LCTRL  &kp SPACE     &kp LEFT_SHIFT  &kp LEFT_ALT  &trans
            >;
        };
    };
};
